
                                                                                                                                                                                                                                                                                                                                                                        /*
 notifications ⟩ components ⟩ reduced-dark-ui


author      Tuomas Hatakka
email       tuomas.hatakka@gmail.com
copyright   Copyright (C) 2016-2017 Tuomas Hatakka



✕ Namespace                                                                                                                                                                                                                                                                                                                                                          */
atom-notifications {


                                                                                                                                                                                                                                                                                                                                                                          /*
✕ Local variables                                                                                                                                                                                                                                                                                                                                                          */

@hide-factor:           0; //.85;
@shadow-opacity:        15; // this per 100
@shadow-blur:           14;    // this per 10
@shadow:                0em 1em unit(@shadow-blur / 10, em) rgba(0, 0, 0, @shadow-opacity / 100);
@padding:               @component-padding;
@left-bar-width:        3rem;
@icon-size:             10px;
@border-radius:         2px;
@gutter:                1px;


                                                                                                                                                                                                                                                                                                                                                                          /*
✕ General definitions                                                                                                                                                                                                                                                                                                                                                          */

.text(normal);
top:                    @padding;
background-color:       transparent;
margin-left:           -@left-bar-width;


                                                                                                                                                                                                                                                                                                                                                                          /*
✕ Notifications                                                                                                                                                                                                                                                                                                                                                          */

atom-notification:hover {
  transition-delay:     0s;
  transition-duration:  @transition-time/2;
  transform:            translateX(0) }

atom-notification {
  box-shadow:           @shadow;
  overflow:             hidden;
  margin:               0 0 @gutter;
  padding:              0 0 0 @left-bar-width;
  border:               0px solid rgba(0,0,0,0.2);
  border-radius:        @border-radius !important;
  background-color:     var(--background-color);
  transform:            translateX(unit(@hide-factor * 100, %));
  transition:           transform @transition-time/2 @transition-curve @transition-time;

  &.has-close .message {
    padding-right:      2rem }
  &:first-child.has-close .message {
    padding-right:      6rem }
  &:not(.has-close) {
    transform:          translateX(0) }
  &::after, &:not(.has-close) .close-all {
    display:            none }
                                                                                                                                                                                                                                                                                                                                                                                      /*
  → Left-side icons                                                                                                                                                                                                                                                                                                                                                         */
  &::before {
    position:           absolute;
    box-sizing:         border-box;
    text-align:         center;
    vertical-align:     middle;
    display:            table-cell;
    height:             auto;
    top:                0;
    left:               0;
    bottom:             0;
    background:         transparent;
    line-height:        auto !important;
    width:              @left-bar-width   !important;
    padding:            @left-bar-width/3 !important;
    font-size:          @left-bar-width/3 !important;
    border-radius:      @border-radius 0 0
                        @border-radius !important }

  .content {
    padding:            @padding }

  .content .message.item {
    .h5;
    margin:             0; }

  .close,
  .close::before {
    transition:         color var(--anim-duration) ease;
    color:              inherit !important }

  .btn-toolbar {
    display:            flex;
    margin:             0 -2 * @padding -@padding !important;

    & > *,
    & > .btn.btn {
      box-sizing:       border-box;
      transition:       all var(--anim-duration);
      flex:             1 1 auto;
      text-align:       center;
      margin:           0;
      padding:          0 !important;
      border-width:     0 !important;
      border-radius:    0 !important;
      background-color: var(--background-color);
      height:           var(--size) !important;
      line-height:      var(--size) !important;

      &:not(:hover) {
        color:          var(--text-color) !important }

      &:first-child {
        border-left-width: 0 !important }}}

.btn, .btn.close-all,
.btn-success,
.btn-default.btn-success {

  font-size:            0.8em !important;

  &.close-all {
    right:              3.5rem;
    top:                @component-padding;
    position:           fixed;
    background:         @base-background-color;
    border-color:       auto;

  &:hover {
    background:         @base-background-color;
    border-color:       @base-background-color;
    color:              @text-color-highlight !important;
    }}}

code.error,
.error code {
  .state(error) }

.content,
.detail,
.message,
.meta {
  background-clip:      inherit;
  background-color:     transparent !important;
  padding:              @padding;
  color:                @text-color;
  line-height:          1.5em;
  border-width:         0;

.stack-toggle {
  line-height:          @left-bar-width;
  border-top:           1px solid fade(@text-color-subtle, 5%);
  color:                @text-color-info;

  .icon, .icon::before {
    line-height:        inherit;
    font-size:          inherit }}}

.detail {
  padding-top:          0;
  line-height:          1.5em;

  code {
    .text(subtle) }

  .detail-content {
    .text(subtle);
    line-height:        1.5em }}

.meta {
  padding-top:          0;
  padding-bottom:       0;

  .description {
    padding-bottom:     @button-height/2;
    a { color:          @text-color-info }}

  &:empty {
    padding-top:        0;
    display:            block; }

  .btn-toolbar .icon-clippy {
    color:              var(--text-color);
    line-height:        @button-height;
    padding-left:       @button-height/2 }}


}

                                                                                                                                                                                                                                                                                                                                                                              /*
✕ State colors                                                                                                                                                                                                                                                                                                                                                          */

@info: ~"atom-notification.icon.info::before";
@fatal: ~"atom-notification.icon.fatal::before";
@error: ~"atom-notification.icon.error::before";
@warning: ~"atom-notification.icon.warning::before";
@success: ~"atom-notification.icon.success::before";

@{info} {
  color:              @text-color-info;
  background-color:   @background-color-info }

@{fatal} {
  color:              @text-color-error;
  background-color:   @background-color-error }

@{error} {
  color:              @color-annotation;
  background-color:   @background-color-annotation }

@{warning} {
  color:              @text-color-warning;
  background-color:   @background-color-warning }

@{success} {
  color:              @text-color-success;
  background-color:   @background-color-success }

}
