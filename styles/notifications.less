
                                                                                                                                                                                                                                                                                                                                                                        /*
    props.notifications _ reduced-dark-ui


author      Tuomas Hatakka
email       tuomas.hatakka@gmail.com
copyright   Copyright (C) 2016-2017 Tuomas Hatakka                                                                                                                                                                                                                                                                                                                      */


@shadow-opacity: 15; // this per 100
@shadow-blur: 14;    // this per 10
@left-bar-width: 3rem;
@hide-factor: 0; //.85;

@border-radius: 1px;
@padding: unit(@size-xlarge, rem);

atom-notifications {
  @icon-size: 10px;

  .text(normal);
  top: 1rem;
  background-color: transparent;
  margin-left: -@left-bar-width;

  atom-notification:hover {
    transition-delay: 0s;
    transition-duration: @transition-time/2;
    transform: translateX(0) }

  atom-notification {
    box-shadow: 0em 1em unit(@shadow-blur / 10, em) rgba(0, 0, 0, @shadow-opacity / 100);
    border: 0px solid rgba(0,0,0,0.2);
    border-radius: 2px !important;
    overflow: hidden;
    transition: transform @transition-time/2 @transition-curve @transition-time;
    transform: translateX(unit(@hide-factor * 100, %));

    &:not(.has-close) { transform: translateX(0) }
    &:not(.has-close) .close-all { display: none }
    &.has-close .message { padding-right: 2rem }
    &:first-child.has-close .message { padding-right: 6rem }

    &::after {
      display: none }

    &.icon::before {
      display: block;
      //display: none;
      position: absolute;
      box-sizing: border-box;
      text-align: center;
      height: inherit;
      top: 0;
      bottom: 0;
      left: 0;
      width: @left-bar-width;
      padding: @left-bar-width/3;
      font-size: @left-bar-width/3;
      border-radius: @border-radius 0 0 @border-radius !important;
      background: @background-color-info }}

  .close {
    transition: all @transition-time ease;
    &:before { color: @text-color }}

  .btn-toolbar {
    display: flex;
    margin: 0 -1rem;

    & > *,
    & > .btn.btn {
      transition: all @transition-time;
      flex: 1 1 auto;
      border-radius: 0 !important;
      text-align: center;
      margin: 0;
      padding: 0 !important;
      height: @tab-height*0.75 !important;
      line-height: @tab-height*0.75 !important;

      border-collapse: collapse;
      border-width: 0 !important;
      border-style: solid;
      border-color: @base-border-color !important;
      background-color: rgba(0, 0, 0, 0.1);
      box-sizing: border-box;

      &:not(:hover) {
        color: @text-color-subtle !important }

      &:hover {
        background: @text-color-subtle }

      &:first-child {
        border-left-width: 0 !important }}}

  .btn, .btn.close-all,
  .btn-success,
  .btn-default.btn-success {

    .button-variant(@text-color-info);
    font-weight: 300 !important;
    font-size: 0.8em !important;
    vertical-align: middle;
    box-sizing: content-box;
    padding: @component-padding/2 @component-padding !important;

    &.close-all {
      right: 3.5rem;
      top: 2.2rem;
      position: fixed; background: @base-background-color }}

  .error {
    code {
      .state(error) }}

  .content,
  .detail,
  .message,
  .meta {
    background-clip: inherit;
    padding: @padding 1rem;
    line-height: 1.4em;
    border-width: 0;
    color: @text-color;
    background-color: @overlay-background-color;

  .stack-toggle {
    line-height: @left-bar-width;
    border-top: 1px solid fade(@text-color-subtle, 5%);
    color: @text-color-info;

    .icon, .icon::before {
      line-height: inherit;
      font-size: inherit }}}

  .detail {
    padding-top: 0;
    line-height: 1.5em;

    code {
      .text(subtle) }

    .detail-content {
      .text(subtle);
      line-height: 1.5em }}

  .content {
    border-radius: 0;
    padding: 0 }

  .meta {
    padding-top: 0;
    padding-bottom: 0;

    .description {
      padding-bottom: @button-height/2;
      a { color: @text-color-info }}

    &:empty {
      padding-top: 0;
      display: block; }

    .btn-toolbar .icon-clippy {
      color: @text-color;
      line-height: @button-height;
      padding-left: @button-height/2 }}}
