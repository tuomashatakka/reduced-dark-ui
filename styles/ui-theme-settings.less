
                                                                                                                                                                                                                                                                                                                                                                        /*
    user.interface.config _ reduced-dark-ui


author      Tuomas Hatakka
email       tuomas.hatakka@gmail.com
copyright   Copyright (C) 2016-2017 Tuomas Hatakka

    ............


Tab alignment                                                                                                                                                                                                                                                                                                                                                          */
.tab-bar when (@config-tabPosition = left) {
  justify-content: flex-start }

.tab-bar when (@config-tabPosition = center) {
  justify-content: center }

.tab-bar when (@config-tabPosition = right) {
  flex-basis: none;
  justify-content: flex-end }

.tab-bar .tab {
  flex-grow: 0 }

.tab-bar .tab when (@config-tabPosition = stretch) {
  max-width: none;
  flex-basis: auto }

                                                                                                                                                                                                                                                                                                                                                                                    /*
Tab bar fixed to the top of the screen                                                                                                                                                                                                                                                                                                                                */
atom-workspace > atom-workspace-axis when (@config-fixedTabBar = true) {

  margin-top: @tab-height !important;

  // Display primarily the focused editor's tabs
  .pane.active .tab-bar {
    z-index: 1000 }

  .tab-bar {
    position: fixed;
    height: @tab-height;
    transform: translateY(-100%);
    left: 0;
    right: 0;
    z-index: 300 }}

                                                                                                                                                                                                                                                                                                                                                                           /*
Project root(s) fixed to the top of the tree view                                                                                                                                                                                                                                                                                                                                */
atom-workspace when (@config-fixedProjectRoot = true) {

  .tree-view-scroller {
    position: relative;
    margin-left: 0;
    overflow: initial;
    z-index: 301;

    .tree-view {
      position: relative;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin-left: 0;
      padding: 0;
      overflow: initial;
      display: flex;
      flex-flow: column nowrap;

      > .project-root {
        position: static;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: 0;
        padding: 0;
        max-width: 100%;
        transition: all .3s;

        &.selected {
          z-index: 1000 }

        &::before {
          content: none; }

        .project-root-header {
          position: relative;
          top: 0;
          left: 0;
          margin: 0;
          padding: 0;
          display: block;
          max-width: 100%;
          z-index: 1000;
          height: @tab-height }

        > .list-tree {
          position: absolute;
          overflow: auto;
          display: block;
          top: @tab-height;
          bottom: 0;
          left: 0;
          right: 0 }

      &.expanded {
        background-color: inherit;
        opacity: 1;

        .project-root-header {
          background-color: inherit !important;
          display: block;
          z-index: 100000000;
          right: 0;
          position: absolute }}

      &.expanded ~ .project-root {
        display: none;
        opacity: 0 }}}}}

                                                                                                                                                                                                                                                                                                                                                                           /*
Editor background override                                                                                                                                                                                                                                                                                                                                                          */
atom-workspace when (@config-overrideEditorBackground = true) {

  atom-text-editor,
  atom-text-editor.editor {
    background: @tab-background-color-active }}

                                                                                                                                                                                                                                                                                                                                                                           /*
Collapsing panels                                                                                                                                                                                                                                                                                                                                                          */
atom-workspace atom-panel-container {

  atom-pane .item-views {
    left: 0;
    transition:
    left @transition-time,
    margin @transition-time }

  atom-panel .display-icon {
    display: none }}

atom-workspace when (@config-collapsing = left) {
  .applyCollapsing(left) }

atom-workspace when (@config-collapsing = right) {
  .applyCollapsing(right) }

atom-workspace when (@config-collapsing = both) {
  .applyCollapsing(left);
  .applyCollapsing(right) }


.applyCollapsing(@cls: neither) {
  @clss:     ~"atom-panel-container.@{cls}";
  @gutter-y: 1 / 8; // Horizontal spacing is 1/8

  @{clss} atom-panel {
    background: @app-background-color;
    position: absolute;
    padding-top: @tab-height;
    top: 0;
    bottom: 0;
    transition:
      margin @transition-time @transition-curve,
      transform @transition-time @transition-curve;

    .display-icon {
      display: block }

    &.left {
      left: 0;
      transform: translateX(-100%);
      margin-right: -@tab-height }

    &.right {
      right: 0;
      transform: translateX(100%);
      margin-left: -@tab-height }

    &.open,
    &:hover {
      transform: translateX(0) }

    &.open  ~ atom-panel,
    &:hover ~ atom-panel {
      margin-left: -@tab-height }

    @advance: @tab-height * (3 / 4 + @gutter-y);
    &:nth-child(1) { z-index: 101; margin-top: 0 * @advance }
    &:nth-child(2) { z-index: 102; margin-top: 1 * @advance }
    &:nth-child(3) { z-index: 103; margin-top: 2 * @advance }
    &:nth-child(4) { z-index: 104; margin-top: 3 * @advance }
    &:nth-child(5) { z-index: 105; margin-top: 4 * @advance }
    &:nth-child(6) { z-index: 106; margin-top: 5 * @advance }}}
